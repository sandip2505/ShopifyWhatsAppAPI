<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopify App API Dashboard</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
            overflow-x: hidden;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* Header */
        .header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
            transition: all 0.3s ease;
        }

        .nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 0;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: bold;
            color: white;
            text-decoration: none;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            transition: opacity 0.3s ease;
        }

        .nav-links a:hover {
            opacity: 0.8;
        }

        /* Hero Section */
        .hero {
            padding: 120px 0 80px;
            text-align: center;
            color: white;
        }

        .hero h1 {
            font-size: 3.5rem;
            margin-bottom: 1rem;
            background: linear-gradient(45deg, #fff, #f0f0f0);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            animation: fadeInUp 1s ease;
        }

        .hero p {
            font-size: 1.2rem;
            margin-bottom: 2rem;
            opacity: 0.9;
            animation: fadeInUp 1s ease 0.2s both;
        }

        .cta-button {
            display: inline-block;
            padding: 12px 30px;
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
            color: white;
            text-decoration: none;
            border-radius: 50px;
            font-weight: 600;
            transition: all 0.3s ease;
            animation: fadeInUp 1s ease 0.4s both;
        }

        .cta-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(255, 107, 107, 0.3);
        }

        /* Stats Section */
        .stats {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 3rem 0;
            margin: 4rem 0;
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 2rem;
            text-align: center;
        }

        .stat-item {
            color: white;
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
            color: #ffd700;
        }

        .stat-label {
            font-size: 1rem;
            opacity: 0.9;
        }

        /* Features Section */
        .features {
            padding: 4rem 0;
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            margin: 4rem 0;
        }

        .features h2 {
            text-align: center;
            font-size: 2.5rem;
            margin-bottom: 3rem;
            color: white;
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
        }

        .feature-card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 15px;
            padding: 2rem;
            text-align: center;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);
            background: rgba(255, 255, 255, 0.15);
        }

        .feature-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
            display: block;
        }

        .feature-title {
            font-size: 1.3rem;
            font-weight: 600;
            margin-bottom: 1rem;
            color: white;
        }

        .feature-description {
            color: rgba(255, 255, 255, 0.8);
            line-height: 1.6;
        }

        .endpoint-list {
            margin-top: 1rem;
            text-align: left;
        }

        .endpoint-item {
            background: rgba(255, 255, 255, 0.1);
            padding: 0.3rem 0.8rem;
            margin: 0.3rem 0;
            border-radius: 5px;
            font-size: 0.9rem;
            color: #e0e0e0;
            font-family: 'Courier New', monospace;
        }

        /* API Documentation Section */
        .api-docs {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 4rem 0;
            margin: 4rem 0;
            text-align: center;
        }

        .api-docs h2 {
            font-size: 2.5rem;
            margin-bottom: 2rem;
            color: white;
        }

        .docs-button {
            display: inline-block;
            padding: 15px 40px;
            background: linear-gradient(45deg, #10ac84, #00d2d3);
            color: white;
            text-decoration: none;
            border-radius: 50px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin: 1rem;
        }

        .docs-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(16, 172, 132, 0.3);
        }

        /* Footer */
        .footer {
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(10px);
            padding: 2rem 0;
            text-align: center;
            color: white;
            margin-top: 4rem;
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }

        .floating {
            animation: float 3s ease-in-out infinite;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .hero h1 {
                font-size: 2.5rem;
            }
            
            .nav-links {
                display: none;
            }
            
            .features-grid {
                grid-template-columns: 1fr;
            }
        }

        /* Particles background */
        .particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }

        .particle {
            position: absolute;
            width: 2px;
            height: 2px;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            animation: particle-float 20s linear infinite;
        }

        section{
            margin: 0 auto !important;
        }

        @keyframes particle-float {
            0% {
                transform: translateY(100vh) rotate(0deg);
                opacity: 0;
            }
            10% {
                opacity: 1;
            }
            90% {
                opacity: 1;
            }
            100% {
                transform: translateY(-100vh) rotate(360deg);
                opacity: 0;
            }
        }
    </style>
</head>
<body>
    <!-- Particles Background -->
    <div class="particles" id="particles"></div>

    <!-- Header -->
    <header class="header">
        <nav class="nav container">
            <a href="#" class="logo">🚀 Shopify API Hub</a>
            <ul class="nav-links">
                <li><a href="#features">Features</a></li>
                <li><a href="#docs">Documentation</a></li>
                <li><a href="https://codecrewinfotech.com/" target="_blank">Contact</a></li>
            </ul>
        </nav>
    </header>

    <!-- Hero Section -->
    <section class="hero">
        <div class="container">
            <h1 class="floating">Shopify App API Suite</h1>
            <p>Complete API solution for WhatsApp integration, customer reviews, stock management, and more</p>
            <a href="#features" class="cta-button">Explore APIs</a>
        </div>
    </section>

    <!-- Stats Section -->
    <section class="stats container">
        <div class="stats-grid">
            <div class="stat-item">
                <div class="stat-number" id="api-count">25+</div>
                <div class="stat-label">API Endpoints</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="feature-count">6</div>
                <div class="stat-label">Core Features</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="security-count">100%</div>
                <div class="stat-label">Secure</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="uptime-count">99.9%</div>
                <div class="stat-label">Uptime</div>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section class="features container" id="features">
        <h2>Powerful API Features</h2>
        <div class="features-grid">
            <div class="feature-card" onclick="showEndpoints('whatsapp')">
                <span class="feature-icon">📱</span>
                <h3 class="feature-title">WhatsApp Integration</h3>
                <p class="feature-description">Complete WhatsApp API with messaging, data management, and header configuration</p>
                <div class="endpoint-list">
                    <div class="endpoint-item">POST /whatsApp</div>
                    <div class="endpoint-item">GET /whatsApp</div>
                    <div class="endpoint-item">PUT /updateWhatsApp/:id</div>
                    <div class="endpoint-item">DELETE /deleteWhatsApp/:id</div>
                </div>
            </div>

            <div class="feature-card" onclick="showEndpoints('reviews')">
                <span class="feature-icon">⭐</span>
                <h3 class="feature-title">Customer Reviews</h3>
                <p class="feature-description">Comprehensive review system with ratings, image uploads, and store management</p>
                <div class="endpoint-list">
                    <div class="endpoint-item">POST /addReview</div>
                    <div class="endpoint-item">GET /getallReview/:storeName</div>
                    <div class="endpoint-item">POST /storeReview</div>
                    <div class="endpoint-item">PUT /updateReview/:id</div>
                </div>
            </div>

            <div class="feature-card" onclick="showEndpoints('upsell')">
                <span class="feature-icon">🛍️</span>
                <h3 class="feature-title">Upsell Management</h3>
                <p class="feature-description">Product upselling with dynamic title updates and inventory management</p>
                <div class="endpoint-list">
                    <div class="endpoint-item">POST /addProduct</div>
                    <div class="endpoint-item">GET /getProducts</div>
                    <div class="endpoint-item">POST /updateTitle</div>
                    <div class="endpoint-item">POST /deleteProduct</div>
                </div>
            </div>

            <div class="feature-card" onclick="showEndpoints('stock')">
                <span class="feature-icon">📦</span>
                <h3 class="feature-title">Stock Configuration</h3>
                <p class="feature-description">Advanced stock management with customizable fields and color configurations</p>
                <div class="endpoint-list">
                    <div class="endpoint-item">POST /configuration</div>
                    <div class="endpoint-item">GET /configuration/:shop</div>
                    <div class="endpoint-item">POST /addConfigurationsFields/:shop</div>
                    <div class="endpoint-item">POST /addConfigurationsColor/:shop</div>
                </div>
            </div>

            <div class="feature-card" onclick="showEndpoints('user')">
                <span class="feature-icon">👥</span>
                <h3 class="feature-title">User Management</h3>
                <p class="feature-description">Shopify user integration with mobile country code support</p>
                <div class="endpoint-list">
                    <div class="endpoint-item">GET /shopifyUser</div>
                    <div class="endpoint-item">POST /shopifyUser</div>
                    <div class="endpoint-item">GET /mobile</div>
                </div>
            </div>

            <div class="feature-card" onclick="showEndpoints('icemajesty')">
                <span class="feature-icon">🧊</span>
                <h3 class="feature-title">Ice Majesty</h3>
                <p class="feature-description">Specialized configuration system with custom image upload support</p>
                <div class="endpoint-list">
                    <div class="endpoint-item">GET /ice-majesty/showConfig/:shop</div>
                    <div class="endpoint-item">POST /ice-majesty/addConfig</div>
                </div>
            </div>
        </div>
    </section>

    <!-- API Documentation Section -->
    <section class="api-docs container" id="docs">
        <h2>API Documentation</h2>
        <p style="color: rgba(255, 255, 255, 0.8); margin-bottom: 2rem;">
            Explore comprehensive documentation for all API endpoints
        </p>
        <a href="/api/docs" class="docs-button">View Full Documentation</a>
        <a href="#" class="docs-button" onclick="showApiStatus()">API Status</a>
    </section>

    <!-- Footer -->
    <footer class="footer">
        <div class="container">
            <p>&copy; 2024 Shopify API Hub. Built with ❤️ for developers.</p>
        </div>
    </footer>

    <script>
        // Create floating particles
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            const particleCount = 50;

            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                particle.style.left = Math.random() * 100 + '%';
                particle.style.animationDelay = Math.random() * 20 + 's';
                particle.style.animationDuration = (Math.random() * 10 + 10) + 's';
                particlesContainer.appendChild(particle);
            }
        }

        // Animate counters
        function animateCounter(element, target, duration = 2000) {
            const start = 0;
            const startTime = performance.now();
            
            function updateCounter(currentTime) {
                const elapsed = currentTime - startTime;
                const progress = Math.min(elapsed / duration, 1);
                
                const current = Math.floor(progress * target);
                element.textContent = current + (element.id === 'security-count' || element.id === 'uptime-count' ? '%' : element.id === 'api-count' ? '+' : '');
                
                if (progress < 1) {
                    requestAnimationFrame(updateCounter);
                }
            }
            
            requestAnimationFrame(updateCounter);
        }

        // Show API endpoints details
        function showEndpoints(category) {
            const endpoints = {
                whatsapp: [
                    'POST /whatsApp - Send WhatsApp messages',
                    'GET /whatsApp - Retrieve WhatsApp data',
                    'PUT /updateWhatsApp/:id - Update WhatsApp entry',
                    'DELETE /deleteWhatsApp/:id - Delete WhatsApp entry',
                    'POST /header - Add header configuration',
                    'GET /header - Get header data',
                    'PUT /header/:id - Update header',
                    'DELETE /header/:id - Delete header'
                ],
                reviews: [
                    'POST /addReview - Add new review',
                    'GET /getallReview/:storeName - Get all reviews for store',
                    'GET /getReview/:storeName/:productId - Get product reviews',
                    'DELETE /deleteReview/:id - Delete review',
                    'PUT /updateReview/:id - Update review',
                    'POST /storeReview - Add store review with images',
                    'POST /ratingConfig - Add rating configuration',
                    'GET /ratingConfig/:storeName - Get rating config'
                ],
                upsell: [
                    'POST /addProduct - Add upsell product',
                    'GET /getProducts - Get all products',
                    'POST /updateTitle - Update product title',
                    'POST /deleteProduct - Delete specific product',
                    'POST /deleteAllProducts - Delete all products'
                ],
                stock: [
                    'POST /configuration - Add stock configuration',
                    'GET /configuration/:shop - Get shop configuration',
                    'GET /configurationFields/:shop - Get config fields',
                    'POST /addConfigurationsFields/:shop - Update config fields',
                    'GET /configurationColor/:shop - Get color config',
                    'POST /addConfigurationsColor/:shop - Add color config'
                ],
                user: [
                    'GET /shopifyUser - Get Shopify user data',
                    'POST /shopifyUser - Create Shopify user',
                    'GET /mobile - Get country codes',
                    'GET /version - Get API version'
                ],
                icemajesty: [
                    'GET /ice-majesty/showConfig/:shop - Show shop config',
                    'POST /ice-majesty/addConfig - Add config with image upload'
                ]
            };

            alert(`${category.toUpperCase()} API Endpoints:\n\n${endpoints[category].join('\n')}`);
        }

        // Show API status
        function showApiStatus() {
            const status = {
                'WhatsApp API': '🟢 Online',
                'Reviews API': '🟢 Online',
                'Upsell API': '🟢 Online',
                'Stock API': '🟢 Online',
                'User API': '🟢 Online',
                'Ice Majesty API': '🟢 Online'
            };

            let statusText = 'API Status:\n\n';
            Object.entries(status).forEach(([api, status]) => {
                statusText += `${api}: ${status}\n`;
            });

            alert(statusText);
        }

        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth'
                    });
                }
            });
        });

        // Header scroll effect
        window.addEventListener('scroll', () => {
            const header = document.querySelector('.header');
            if (window.scrollY > 100) {
                header.style.background = 'rgba(255, 255, 255, 0.2)';
            } else {
                header.style.background = 'rgba(255, 255, 255, 0.1)';
            }
        });

        // Initialize everything when page loads
        document.addEventListener('DOMContentLoaded', function() {
            createParticles();
            
            // Start counter animations when stats section is visible
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        animateCounter(document.getElementById('api-count'), 25);
                        animateCounter(document.getElementById('feature-count'), 6);
                        animateCounter(document.getElementById('security-count'), 100);
                        animateCounter(document.getElementById('uptime-count'), 99.9);
                        observer.unobserve(entry.target);
                    }
                });
            });

            observer.observe(document.querySelector('.stats'));
        });
    </script>
</body>
</html>